import type { PyScriptTag } from "./py-script.types";
/**
 * Allow to embed python scripts.
 * @type {PyScriptTag}
 * @returns {JSX.Element}
 * @param {string} properties.children - Python script content.
 * @param {string} properties.output - Id of element where output should be displayed. Works only with legacy version of PyScript.
 * @param {string} properties.source - Path to python file.
 * @param {string} properties.src - Alias for source.
 * @param {string} properties.generateOutputTag - If the value is true, it generates a `div` element. When the provided value is a string, it generates an element based on this value. If we want to limit only to real tags in HTML, we can check if the value meets the assumptions of the `keyof ReactHTML` type.
 * @param {string | string[] | Set<string> | ChildrenAsObject} properties.pyEnvContent - py-env children (deprecated - works only with legacy pyscript).
 * @param {Omit<PyEnvPropertiesBase, "children">} properties.pyEnvProps - py-env properties (deprecated - works only with legacy pyscript).
 * @param {string | (Record<string, any> & PyConfigSharedJsonProperties)} properties.pyConfigContent - py-config children
 * @param {Omit<ReactElementProps<DetailedHTMLProps<HTMLAttributes<HTMLElement>, HTMLElement>>,"children"> & (Omit<PyConfigPropertiesWithJsonType, "children"> | Omit<PyConfigPropertiesWithTomlType, "children"> | PyConfigPropertiesWithoutChildren)} properties.pyConfigProps - py-config properties
 * @see {@link https://docs.pyscript.net/latest/reference/elements/py-script.html} Original py-script element documentation.
 * @see {@link https://pyscript-react.github.io/} Pyscript-react element documentation.
 */
declare const PyScript: PyScriptTag;
export default PyScript;
