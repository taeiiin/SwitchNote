{"ast":null,"code":"var util = require('util');\nvar spawn = require('child_process').spawn;\nvar child = spawn('python', ['-u', '-i']);\nvar cmdQueue = new Array();\nchild.stdout.on('data', handleStdout);\nchild.stderr.on('data', handleStderr);\nchild.on('exit', handleExit);\nfunction handleStdout(data) {\n  var datastr = data.toString('utf8');\n  var finished = false;\n  if (datastr.match(/Command Start\\n/)) {\n    datastr = datastr.replace(/Command Start\\n/, '');\n  }\n  if (datastr.match(/Command End\\n/)) {\n    datastr = datastr.replace(/Command End\\n/, '');\n    finished = true;\n  }\n  if (cmdQueue.length > 0) {\n    cmdQueue[0].data += datastr;\n  }\n  if (finished) {\n    cmd = cmdQueue.shift();\n    if (cmd && cmd.command) {\n      if (undefined != typeof cmd.callback) {\n        cmd.callback(null, cmd.data);\n        processQueue();\n      }\n    }\n  }\n}\n;\nfunction handleStderr(data) {\n  processQueue();\n}\n;\nfunction processQueue() {\n  if (cmdQueue.length > 0 && cmdQueue[0].state === 'pending') {\n    cmdQueue[0].state = 'processing';\n    child.stdin.write(cmdQueue[0].command, encoding = 'utf8');\n  }\n}\n;\nfunction handleExit(code) {\n  console.log('child process exited with code ' + code);\n  process.exit();\n}\n;\nthis.shell = function (command, callback) {\n  command = 'print \"Command Start\"; ' + command + '\\nprint \"Command End\"';\n  if (command.charAt[command.length - 1] != '\\n') command += '\\n';\n  cmdQueue.push({\n    'command': command,\n    'callback': callback,\n    'data': '',\n    state: 'pending'\n  });\n  processQueue();\n};","map":{"version":3,"names":["util","require","spawn","child","cmdQueue","Array","stdout","on","handleStdout","stderr","handleStderr","handleExit","data","datastr","toString","finished","match","replace","length","cmd","shift","command","undefined","callback","processQueue","state","stdin","write","encoding","code","console","log","process","exit","shell","charAt","push"],"sources":["/Users/taein/Desktop/한이음/SwitchNote_1101/Switchnote_Front/node_modules/python/lib/python.js"],"sourcesContent":["var util     =   require('util');\nvar spawn    =   require('child_process').spawn;\nvar child    =   spawn('python',['-u','-i']);\nvar cmdQueue =   new Array();\n\n\nchild.stdout.on('data', handleStdout);\nchild.stderr.on('data', handleStderr);\nchild.on('exit', handleExit);\n\n\nfunction handleStdout(data) {\n  var datastr = data.toString('utf8');\n  var finished = false;\n  if (datastr.match(/Command Start\\n/)) {\n    datastr = datastr.replace(/Command Start\\n/,'');\n  } \n  if (datastr.match(/Command End\\n/)) {\n    datastr = datastr.replace(/Command End\\n/,'');\n    finished = true;\n  }\n  if (cmdQueue.length > 0) {\n    cmdQueue[0].data+=datastr;\n  } \n  if (finished) {\n    cmd = cmdQueue.shift();\n    if (cmd && cmd.command) {\n      if (undefined != typeof cmd.callback) {\n        cmd.callback(null, cmd.data);\n        processQueue();\n      }\n    }\n  } \n};\n\n\nfunction handleStderr(data) {\n  processQueue();\n};\n\nfunction processQueue() {\n  if (cmdQueue.length > 0 && cmdQueue[0].state === 'pending') {\n    cmdQueue[0].state = 'processing';\n    child.stdin.write(cmdQueue[0].command, encoding='utf8');\n  }\n};\n\n\nfunction handleExit(code) {\n  console.log('child process exited with code ' + code);\n  process.exit();\n};\n\n\nthis.shell = function (command, callback) {\n  command = 'print \"Command Start\"; ' + command + '\\nprint \"Command End\"';\n  if (command.charAt[command.length-1]!='\\n') command += '\\n';\n  cmdQueue.push({'command':command, 'callback':callback, 'data': '', state: 'pending'});\n  processQueue();\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAASC,OAAO,CAAC,MAAM,CAAC;AAChC,IAAIC,KAAK,GAAQD,OAAO,CAAC,eAAe,CAAC,CAACC,KAAK;AAC/C,IAAIC,KAAK,GAAQD,KAAK,CAAC,QAAQ,EAAC,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC;AAC5C,IAAIE,QAAQ,GAAK,IAAIC,KAAK,CAAC,CAAC;AAG5BF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,MAAM,EAAEC,YAAY,CAAC;AACrCL,KAAK,CAACM,MAAM,CAACF,EAAE,CAAC,MAAM,EAAEG,YAAY,CAAC;AACrCP,KAAK,CAACI,EAAE,CAAC,MAAM,EAAEI,UAAU,CAAC;AAG5B,SAASH,YAAYA,CAACI,IAAI,EAAE;EAC1B,IAAIC,OAAO,GAAGD,IAAI,CAACE,QAAQ,CAAC,MAAM,CAAC;EACnC,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIF,OAAO,CAACG,KAAK,CAAC,iBAAiB,CAAC,EAAE;IACpCH,OAAO,GAAGA,OAAO,CAACI,OAAO,CAAC,iBAAiB,EAAC,EAAE,CAAC;EACjD;EACA,IAAIJ,OAAO,CAACG,KAAK,CAAC,eAAe,CAAC,EAAE;IAClCH,OAAO,GAAGA,OAAO,CAACI,OAAO,CAAC,eAAe,EAAC,EAAE,CAAC;IAC7CF,QAAQ,GAAG,IAAI;EACjB;EACA,IAAIX,QAAQ,CAACc,MAAM,GAAG,CAAC,EAAE;IACvBd,QAAQ,CAAC,CAAC,CAAC,CAACQ,IAAI,IAAEC,OAAO;EAC3B;EACA,IAAIE,QAAQ,EAAE;IACZI,GAAG,GAAGf,QAAQ,CAACgB,KAAK,CAAC,CAAC;IACtB,IAAID,GAAG,IAAIA,GAAG,CAACE,OAAO,EAAE;MACtB,IAAIC,SAAS,IAAI,OAAOH,GAAG,CAACI,QAAQ,EAAE;QACpCJ,GAAG,CAACI,QAAQ,CAAC,IAAI,EAAEJ,GAAG,CAACP,IAAI,CAAC;QAC5BY,YAAY,CAAC,CAAC;MAChB;IACF;EACF;AACF;AAAC;AAGD,SAASd,YAAYA,CAACE,IAAI,EAAE;EAC1BY,YAAY,CAAC,CAAC;AAChB;AAAC;AAED,SAASA,YAAYA,CAAA,EAAG;EACtB,IAAIpB,QAAQ,CAACc,MAAM,GAAG,CAAC,IAAId,QAAQ,CAAC,CAAC,CAAC,CAACqB,KAAK,KAAK,SAAS,EAAE;IAC1DrB,QAAQ,CAAC,CAAC,CAAC,CAACqB,KAAK,GAAG,YAAY;IAChCtB,KAAK,CAACuB,KAAK,CAACC,KAAK,CAACvB,QAAQ,CAAC,CAAC,CAAC,CAACiB,OAAO,EAAEO,QAAQ,GAAC,MAAM,CAAC;EACzD;AACF;AAAC;AAGD,SAASjB,UAAUA,CAACkB,IAAI,EAAE;EACxBC,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGF,IAAI,CAAC;EACrDG,OAAO,CAACC,IAAI,CAAC,CAAC;AAChB;AAAC;AAGD,IAAI,CAACC,KAAK,GAAG,UAAUb,OAAO,EAAEE,QAAQ,EAAE;EACxCF,OAAO,GAAG,yBAAyB,GAAGA,OAAO,GAAG,uBAAuB;EACvE,IAAIA,OAAO,CAACc,MAAM,CAACd,OAAO,CAACH,MAAM,GAAC,CAAC,CAAC,IAAE,IAAI,EAAEG,OAAO,IAAI,IAAI;EAC3DjB,QAAQ,CAACgC,IAAI,CAAC;IAAC,SAAS,EAACf,OAAO;IAAE,UAAU,EAACE,QAAQ;IAAE,MAAM,EAAE,EAAE;IAAEE,KAAK,EAAE;EAAS,CAAC,CAAC;EACrFD,YAAY,CAAC,CAAC;AAChB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}