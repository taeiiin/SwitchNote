{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1222p\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\2023 \\uD55C\\uC774\\uC74C ICT\\\\switchnote_all\\\\Switchnote_Front\\\\src\\\\components\\\\TextEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport refreshIcon from './images/refreshIcon.png';\nimport copyIcon from './images/copyIcon.png';\nimport MyButton from './MyButton.js';\nimport MyTextarea from './MyTextarea.js';\nimport { CallGPT } from '../api/gpt';\nimport TextInput from './TextInput.js';\nimport { CallKoBERT } from '../api/kobert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextEditor({\n  getProjectById\n}) {\n  _s();\n  const [projectTitle, setProjectTitle] = useState('');\n  const [projectContent, setProjectContent] = useState('');\n  const [project, setProject] = useState(null);\n  const {\n    projectId\n  } = useParams();\n\n  // 사용자 입력값 저장 상태\n  const [userInput, setUserInput] = useState(\"\");\n  useEffect(() => {\n    if (projectId) {\n      const projectData = getProjectById(projectId);\n      if (projectData) {\n        setProjectContent(projectData.content); // 프로젝트 내용 저장\n        setUserInput(projectData.content); // userInput에도 동일한 내용 저장\n        setProject(projectData);\n        setProjectTitle(projectData.title);\n      }\n    }\n  }, [projectId]);\n\n  // 새로고침 핸들러\n  const handleClearText = () => {\n    setUserInput('');\n  };\n\n  // 텍스트 복사 핸들러\n  const handleCopyText = async () => {\n    if (textAreaRef.current) {\n      await navigator.clipboard.writeText(userInput);\n      alert('텍스트가 클립보드에 복사되었습니다.');\n    }\n  };\n\n  // ppt 생성 기능\n  const handleSubmit = () => {\n    handleCreatePPT(userInput);\n  };\n  const [data, setData] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ppt 생성 함수\n  const handleCreatePPT = async input => {\n    try {\n      setIsLoading(true);\n      const message = await CallGPT({\n        prompt: `${input}`\n      });\n      setData(message);\n\n      //gpt 결과를 koBERT에 전달할 것임\n      //kobertResult 변수에 kobert 수행 결과가 들어 있음\n      const kobertResult = await CallKoBERT({\n        gptOutput: message\n      });\n    } catch (error) {} finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 입력한 텍스트 txt 파일로 저장\n  const handleDownload = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([project ? project.content : ''], {\n      type: \"text/plain\"\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = project ? `${project.title}.txt` : \"Untitled.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: \"TEXT \\uBCC0\\uD658, \\uADF8\\uB9AC\\uACE0 PPT \\uC0DD\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fileName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyTextarea, {\n        placeholder: project ? project.title : '파일명을 입력하세요',\n        type: \"title\",\n        value: project ? project.title : '',\n        onChange: e => {\n          setProject({\n            ...project,\n            title: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        placeholder: '부가설명을 입력하세요',\n        isLoading: isLoading,\n        onSubmit: value => {\n          setUserInput(value);\n          setProject({\n            ...project,\n            content: value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        textAlign: \"right\",\n        marginTop: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: refreshIcon,\n        alt: \"\\uC0C8\\uB85C\\uACE0\\uCE68\",\n        onClick: handleClearText,\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextInput, {\n        isLoading: isLoading,\n        onSubmit: setUserInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        textAlign: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: copyIcon,\n        alt: \"\\uD14D\\uC2A4\\uD2B8 \\uBCF5\\uC0AC\",\n        onClick: handleCopyText,\n        style: {\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: '10px',\n        marginTop: '50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MyButton, {\n        text: 'PPT 생성',\n        onClick: handleSubmit,\n        type: \"blue\",\n        loading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        text: '.txt 파일로 다운로드',\n        onClick: () => handleDownload(userInput),\n        type: \"gray\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(TextEditor, \"U2vR8rxDixyWVV3Ma8XPZw5Or7Y=\", false, function () {\n  return [useParams];\n});\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","refreshIcon","copyIcon","MyButton","MyTextarea","CallGPT","TextInput","CallKoBERT","jsxDEV","_jsxDEV","TextEditor","getProjectById","_s","projectTitle","setProjectTitle","projectContent","setProjectContent","project","setProject","projectId","userInput","setUserInput","projectData","content","title","handleClearText","handleCopyText","textAreaRef","current","navigator","clipboard","writeText","alert","handleSubmit","handleCreatePPT","data","setData","isLoading","setIsLoading","input","message","prompt","kobertResult","gptOutput","error","handleDownload","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","children","style","display","flexDirection","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","placeholder","value","onChange","e","target","onSubmit","width","textAlign","marginTop","src","alt","onClick","cursor","gap","text","loading","_c","$RefreshReg$"],"sources":["C:/Users/1222p/OneDrive/바탕 화면/2023 한이음 ICT/switchnote_all/Switchnote_Front/src/components/TextEditor.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport refreshIcon from './images/refreshIcon.png';\r\nimport copyIcon from './images/copyIcon.png';\r\nimport MyButton from './MyButton.js';\r\nimport MyTextarea from './MyTextarea.js';\r\nimport { CallGPT } from '../api/gpt';\r\nimport TextInput from './TextInput.js';\r\nimport { CallKoBERT } from '../api/kobert';\r\n\r\nfunction TextEditor({ getProjectById }) {\r\n  const [projectTitle, setProjectTitle] = useState('');\r\n  const [projectContent, setProjectContent] = useState('');\r\n  const [project, setProject] = useState(null);\r\n  const { projectId } = useParams();\r\n  \r\n  // 사용자 입력값 저장 상태\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (projectId) {\r\n      const projectData = getProjectById(projectId);\r\n      if (projectData) {\r\n        setProjectContent(projectData.content); // 프로젝트 내용 저장\r\n        setUserInput(projectData.content); // userInput에도 동일한 내용 저장\r\n        setProject(projectData); \r\n        setProjectTitle(projectData.title);\r\n      }\r\n    }\r\n  }, [projectId]);\r\n  \r\n  // 새로고침 핸들러\r\n  const handleClearText = () => {\r\n    setUserInput('');\r\n  };\r\n\r\n  // 텍스트 복사 핸들러\r\n  const handleCopyText = async () => {\r\n    if(textAreaRef.current) {\r\n      await navigator.clipboard.writeText(userInput);\r\n      alert('텍스트가 클립보드에 복사되었습니다.');\r\n    }\r\n  };\r\n\r\n  // ppt 생성 기능\r\n  const handleSubmit = () => {\r\n    handleCreatePPT(userInput);\r\n  }\r\n\r\n  const [data, setData] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // ppt 생성 함수\r\n  const handleCreatePPT = async(input) => {\r\n    try{\r\n      setIsLoading(true);\r\n      const message = await CallGPT({\r\n        prompt: `${input}`});\r\n      setData(message)\r\n\r\n      //gpt 결과를 koBERT에 전달할 것임\r\n      //kobertResult 변수에 kobert 수행 결과가 들어 있음\r\n      const kobertResult = await CallKoBERT({gptOutput: message});\r\n\r\n    } catch(error) {\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // 입력한 텍스트 txt 파일로 저장\r\n  const handleDownload = () => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([project ? project.content : ''], { type: \"text/plain\" });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = project ? `${project.title}.txt` : \"Untitled.txt\";\r\n    document.body.appendChild(element); \r\n    element.click();\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h3 style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>TEXT 변환, 그리고 PPT 생성</h3>\r\n\r\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n        <label htmlFor=\"fileName\"></label>\r\n          <MyTextarea\r\n            placeholder={project ? project.title : '파일명을 입력하세요'} \r\n            type={\"title\"}\r\n            value={project ? project.title : ''}\r\n            onChange={(e) => {setProject({...project, title: e.target.value});}}\r\n          />\r\n\r\n        <label htmlFor=\"description\"></label>\r\n          <TextInput \r\n            placeholder={'부가설명을 입력하세요'}\r\n            isLoading={isLoading}\r\n            onSubmit={(value) => {setUserInput(value); setProject({...project, content: value});}}\r\n          />\r\n      </div>\r\n      \r\n      <div style={{ width: \"100%\", textAlign:\"right\", marginTop:'50px'}}>\r\n        <img\r\n          src={refreshIcon}\r\n          alt=\"새로고침\"\r\n          onClick={handleClearText}\r\n          style={{ cursor: 'pointer'}}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <TextInput isLoading={isLoading} onSubmit={setUserInput} />\r\n      </div>\r\n\r\n      <div style={{ width: \"100%\", textAlign:\"right\" }}>\r\n        <img\r\n          src={copyIcon}\r\n          alt=\"텍스트 복사\"\r\n          onClick={handleCopyText}\r\n          style={{ cursor: 'pointer'}}\r\n        />\r\n      </div>\r\n      \r\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap:'10px', marginTop:'50px'}}>\r\n           <MyButton text={'PPT 생성'}\r\n               onClick={handleSubmit}\r\n               type={\"blue\"}\r\n               loading={isLoading}\r\n           />\r\n\r\n           {/* .txt 파일 다운로드 핸들러 수정 */}\r\n          <MyButton text={'.txt 파일로 다운로드'}\r\n            onClick={() => handleDownload(userInput)}\r\n            type={\"gray\"}\r\n          />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextEditor;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}