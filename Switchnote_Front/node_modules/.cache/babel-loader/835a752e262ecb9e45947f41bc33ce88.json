{"ast":null,"code":"var _jsxFileName = \"/Users/taein/Desktop/\\u1112\\u1161\\u11AB\\u110B\\u1175\\u110B\\u1173\\u11B7/SwitchNote_1101/Switchnote_Front/src/components/ToScript.js\";\nimport AWS from \"aws-sdk\";\nimport fs from \"fs\";\n//import python from 'python';\nimport React from 'react';\nimport { spawn } from \"child_process\";\nfunction ToScript() {\n  const fs = require('fs');\n  const AWS = require('aws-sdk');\n  const S3_BUCKET = 'pptforscript';\n  const REGION = \"ap-southeast-2\";\n  const s3 = new AWS.S3({\n    secretAccessKey: 'jYNF3dkk06e44cL6iP7aNk9WBsjNOlkgxwNRKfQ1'\n  });\n\n  /*\n  const downloadFile = (fileName) => {\n      const params = {\n          Bucket: S3_BUCKET,\n          Key: 'sample.pptx'\n      };\n      s3.getObject(params, function(err, data) {\n          if(err) {\n              throw err;\n          }\n          fs.writeFileSync(fileName, data.Body.toString());\n      });\n  };\n  */\n\n  const getFile = async (bucketName, fileName) => {\n    const params = {\n      Bucket: S3_BUCKET,\n      Key: 'sample.pptx'\n    };\n    const file = await s3.getObject(params).promise();\n    return file.Body;\n  };\n\n  //const { spawn } = require('child_process');\n  const spawn = require('child_process').spawn;\n  const result = spawn('python', ['PPTtoScript.py', './sample.pptx']);\n  result.stdout.on('data', function (data) {\n    console.log(data.toString());\n  });\n  result.stderr.on('data', function (data) {\n    console.log(data.toString());\n  });\n\n  /*\n  const python = require('python');\n   const convertToScript = async (file) => {\n      const pythonFile = new python.Python();\n      const script = pythonFile.run('PPTtoScript.py');\n      const result = await script.func('PtoS', file);\n      console.log(result);\n      return result;\n  };\n  */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  });\n}\nexport default ToScript;","map":{"version":3,"names":["AWS","fs","React","spawn","ToScript","require","S3_BUCKET","REGION","s3","S3","secretAccessKey","getFile","bucketName","fileName","params","Bucket","Key","file","getObject","promise","Body","result","stdout","on","data","console","log","toString","stderr","createElement","__self","__source","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/taein/Desktop/한이음/SwitchNote_1101/Switchnote_Front/src/components/ToScript.js"],"sourcesContent":["import AWS from \"aws-sdk\";\nimport fs from \"fs\";\n//import python from 'python';\nimport React from 'react';\nimport { spawn } from \"child_process\";\n\nfunction ToScript() {\n    const fs = require('fs');\n    const AWS = require('aws-sdk');\n    const S3_BUCKET = 'pptforscript';\n    const REGION = \"ap-southeast-2\";\n    const s3 = new AWS.S3({\n        secretAccessKey: 'jYNF3dkk06e44cL6iP7aNk9WBsjNOlkgxwNRKfQ1'\n    });\n\n    /*\n    const downloadFile = (fileName) => {\n        const params = {\n            Bucket: S3_BUCKET,\n            Key: 'sample.pptx'\n        };\n        s3.getObject(params, function(err, data) {\n            if(err) {\n                throw err;\n            }\n            fs.writeFileSync(fileName, data.Body.toString());\n        });\n    };\n    */\n\n    const getFile = async (bucketName, fileName) => {\n        const params = {\n          Bucket: S3_BUCKET,\n          Key: 'sample.pptx'\n        };\n        const file = await s3.getObject(params).promise();\n        return file.Body;\n    };\n\n   //const { spawn } = require('child_process');\n   const spawn = require('child_process').spawn;\n   const result = spawn('python', ['PPTtoScript.py', './sample.pptx']);\n   \n    \n    result.stdout.on('data', function(data) {\n        console.log(data.toString());\n    });\n\n    result.stderr.on('data', function(data) {\n        console.log(data.toString());\n    });\n    \n    /*\n    const python = require('python');\n\n    const convertToScript = async (file) => {\n        const pythonFile = new python.Python();\n        const script = pythonFile.run('PPTtoScript.py');\n        const result = await script.func('PtoS', file);\n        console.log(result);\n        return result;\n    };\n    */\n\n    return(\n        <div></div>\n    )\n}\n\nexport default ToScript;"],"mappings":";AAAA,OAAOA,GAAG,MAAM,SAAS;AACzB,OAAOC,EAAE,MAAM,IAAI;AACnB;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,eAAe;AAErC,SAASC,QAAQA,CAAA,EAAG;EAChB,MAAMH,EAAE,GAAGI,OAAO,CAAC,IAAI,CAAC;EACxB,MAAML,GAAG,GAAGK,OAAO,CAAC,SAAS,CAAC;EAC9B,MAAMC,SAAS,GAAG,cAAc;EAChC,MAAMC,MAAM,GAAG,gBAAgB;EAC/B,MAAMC,EAAE,GAAG,IAAIR,GAAG,CAACS,EAAE,CAAC;IAClBC,eAAe,EAAE;EACrB,CAAC,CAAC;;EAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,MAAMC,OAAO,GAAG,MAAAA,CAAOC,UAAU,EAAEC,QAAQ,KAAK;IAC5C,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAET,SAAS;MACjBU,GAAG,EAAE;IACP,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMT,EAAE,CAACU,SAAS,CAACJ,MAAM,CAAC,CAACK,OAAO,CAAC,CAAC;IACjD,OAAOF,IAAI,CAACG,IAAI;EACpB,CAAC;;EAEF;EACA,MAAMjB,KAAK,GAAGE,OAAO,CAAC,eAAe,CAAC,CAACF,KAAK;EAC5C,MAAMkB,MAAM,GAAGlB,KAAK,CAAC,QAAQ,EAAE,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC;EAGlEkB,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC,MAAM,EAAE,UAASC,IAAI,EAAE;IACpCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC;EAEFN,MAAM,CAACO,MAAM,CAACL,EAAE,CAAC,MAAM,EAAE,UAASC,IAAI,EAAE;IACpCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC;;EAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,oBACIzB,KAAA,CAAA2B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAlB,QAAA,EAAAmB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAU,CAAC;AAEnB;AAEA,eAAe9B,QAAQ"},"metadata":{},"sourceType":"module"}