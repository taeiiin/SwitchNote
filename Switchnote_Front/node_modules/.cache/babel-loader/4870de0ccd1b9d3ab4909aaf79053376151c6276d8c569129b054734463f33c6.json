{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/taein/Desktop/\\u1112\\u1161\\u11AB\\u110B\\u1175\\u110B\\u1173\\u11B7/SwitchNote_1101/Switchnote_Front/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _regeneratorRuntime from\"/Users/taein/Desktop/\\u1112\\u1161\\u11AB\\u110B\\u1175\\u110B\\u1173\\u11B7/SwitchNote_1101/Switchnote_Front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/taein/Desktop/\\u1112\\u1161\\u11AB\\u110B\\u1175\\u110B\\u1173\\u11B7/SwitchNote_1101/Switchnote_Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/taein/Desktop/\\u1112\\u1161\\u11AB\\u110B\\u1175\\u110B\\u1173\\u11B7/SwitchNote_1101/Switchnote_Front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//모르겠음. 담당자가 변경하기 바랍니다.\nimport React,{useEffect,useRef,useState}from'react';import{useParams}from'react-router-dom';import refreshIcon from'./images/refreshIcon.png';import copyIcon from'./images/copyIcon.png';import loadingIcon from'./images/loading.gif';import MyButton from'./MyButton.js';import MyTextarea from'./MyTextarea.js';import{CallGPT}from'../api/gpt';import TextInput from'./TextInput.js';import{CallKoBERT}from'../api/kobert';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TextEditor(_ref){var getProjectById=_ref.getProjectById;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),projectTitle=_useState2[0],setProjectTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),projectContent=_useState4[0],setProjectContent=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),project=_useState6[0],setProject=_useState6[1];var _useParams=useParams(),projectId=_useParams.projectId;// 사용자 입력값 저장 상태\nvar _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),userInput=_useState8[0],setUserInput=_useState8[1];useEffect(function(){if(projectId){var projectData=getProjectById(projectId);if(projectData){setProjectContent(projectData.content);// 프로젝트 내용 저장\nsetUserInput(projectData.content);// 프로젝트 내용이 Input이니까 userInput에도 동일한 내용 저장\nsetProject(projectData);// 프로젝트 데이터 저장\nsetProjectTitle(projectData.title);// 프로젝트 제목 저장\n}}},[projectId]);// 텍스트 새로고침\nvar handleClearText=function handleClearText(){setProjectContent('');setUserInput('');};// 텍스트 복사\nvar handleCopyText=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return navigator.clipboard.writeText(userInput);case 2:alert('텍스트가 클립보드에 복사되었습니다.');case 3:case\"end\":return _context.stop();}},_callee);}));return function handleCopyText(){return _ref2.apply(this,arguments);};}();// ppt 생성 기능\nvar handleSubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return handleCreatePPT(userInput);case 2:case\"end\":return _context2.stop();}},_callee2);}));return function handleSubmit(){return _ref3.apply(this,arguments);};}();var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),data=_useState10[0],setData=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isLoading=_useState12[0],setIsLoading=_useState12[1];// ppt 생성 함수\nvar handleCreatePPT=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(input){var message,kobertResult;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;setIsLoading(true);_context3.next=4;return CallGPT({prompt:\"\".concat(input)});case 4:message=_context3.sent;console.log(message);console.log(transformGPTOutput(message));//kobertResult 변수에 kobert 수행 결과가 들어 있음\n_context3.next=9;return CallKoBERT({text:\"\".concat(input)});case 9:kobertResult=_context3.sent;console.log(kobertResult);_context3.next=16;break;case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0);case 16:_context3.prev=16;setIsLoading(false);return _context3.finish(16);case 19:case\"end\":return _context3.stop();}},_callee3,null,[[0,13,16,19]]);}));return function handleCreatePPT(_x){return _ref4.apply(this,arguments);};}();//gpt 결과를 {page:,type:,title:,subtitle:,content:} 형식으로 변환하는 함수\nvar transformGPTOutput=function transformGPTOutput(gptOutput){// '---' 기호를 기준으로 페이지 분리\nvar pages=gptOutput.split('---');var database=[];// 페이지 타입과 해당하는 알파벳 문자 매핑\nvar pageTypeMapping={'[표지]':'a','[목차]':'b','[본문]':'c','[마무리]':'d'};var _iterator=_createForOfIteratorHelper(pages),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var page=_step.value;var lines=page.split('\\n');var title=\"\",subtitle=\"\",contentList=[],pageNumber=0,pageType=\"\";var _iterator2=_createForOfIteratorHelper(lines),_step2;try{var _loop=function _loop(){var line=_step2.value;if(Object.keys(pageTypeMapping).some(function(pageTypeKey){return line.includes(pageTypeKey);})){var matchedPageTypeKey=Object.keys(pageTypeMapping).find(function(pageTypeKey){return line.includes(pageTypeKey);});if(matchedPageTypeKey){pageType=pageTypeMapping[matchedPageTypeKey];}}else if(line.includes(\"페이지 번호:\")){pageNumber=parseInt(line.split(\"페이지 번호:\")[1].trim());}else if(line.includes(\"제목:\")){title+=line.split(\"제목:\")[1].trim();}else if(line.includes(\"소제목:\")){subtitle+=line.split(\"소제목:\")[1].trim();}else if(line.includes(\"내용:\")||line.includes(\"마무리 문장:\")){contentList.push(line.trim());}else{if(line.trim().length>0){contentList.push(line.trim());}}};for(_iterator2.s();!(_step2=_iterator2.n()).done;){_loop();}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}var dataDict={page:pageNumber,type:pageType,title:title,subtitle:subtitle,content:contentList};database.push(dataDict);}}catch(err){_iterator.e(err);}finally{_iterator.f();}return database;};// 입력한 텍스트를 txt 파일로 저장\nvar handleDownload=function handleDownload(title,content){var element=document.createElement(\"a\");var file=new Blob([content],{type:\"text/plain\"});element.href=URL.createObjectURL(file);element.download=title?\"\".concat(title,\".txt\"):\"Untitled.txt\";document.body.appendChild(element);element.click();};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{style:{display:'flex',flexDirection:'column',alignItems:'center'},children:\"TEXT \\uBCC0\\uD658, \\uADF8\\uB9AC\\uACE0 PPT \\uC0DD\\uC131\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fileName\"}),/*#__PURE__*/_jsx(MyTextarea,{placeholder:project?project.title:'파일명을 입력하세요',type:\"title\",value:projectTitle,onChange:function onChange(e){return setProjectTitle(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\"}),/*#__PURE__*/_jsx(MyTextarea,{placeholder:'부가설명을 입력하세요',type:\"small\",isLoading:isLoading})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",textAlign:\"right\",marginTop:'50px'},children:/*#__PURE__*/_jsx(\"img\",{src:refreshIcon,alt:\"\\uC0C8\\uB85C\\uACE0\\uCE68\",onClick:handleClearText,style:{cursor:'pointer'}})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextInput,{isLoading:isLoading,onSubmit:setUserInput,value:userInput})}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",textAlign:\"right\"},children:/*#__PURE__*/_jsx(\"img\",{src:copyIcon,alt:\"\\uD14D\\uC2A4\\uD2B8 \\uBCF5\\uC0AC\",onClick:handleCopyText,style:{cursor:'pointer'}})}),/*#__PURE__*/_jsx(MyButton,{text:'Workspace에 저장'// Workspace에 저장하는 기능 구현\n,type:\"blue\"}),/*#__PURE__*/_jsx(MyButton,{text:'.txt 파일로 다운로드',onClick:function onClick(){return handleDownload(projectTitle,userInput);},type:\"gray\"})]});}export default TextEditor;","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","refreshIcon","copyIcon","loadingIcon","MyButton","MyTextarea","CallGPT","TextInput","CallKoBERT","jsx","_jsx","jsxs","_jsxs","TextEditor","_ref","getProjectById","_useState","_useState2","_slicedToArray","projectTitle","setProjectTitle","_useState3","_useState4","projectContent","setProjectContent","_useState5","_useState6","project","setProject","_useParams","projectId","_useState7","_useState8","userInput","setUserInput","projectData","content","title","handleClearText","handleCopyText","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","navigator","clipboard","writeText","alert","stop","apply","arguments","handleSubmit","_ref3","_callee2","_callee2$","_context2","handleCreatePPT","_useState9","_useState10","data","setData","_useState11","_useState12","isLoading","setIsLoading","_ref4","_callee3","input","message","kobertResult","_callee3$","_context3","prompt","concat","sent","console","log","transformGPTOutput","text","t0","error","finish","_x","gptOutput","pages","split","database","pageTypeMapping","_iterator","_createForOfIteratorHelper","_step","s","n","done","page","value","lines","subtitle","contentList","pageNumber","pageType","_iterator2","_step2","_loop","line","Object","keys","some","pageTypeKey","includes","matchedPageTypeKey","find","parseInt","trim","push","length","err","e","f","dataDict","type","handleDownload","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","children","style","display","flexDirection","alignItems","htmlFor","placeholder","onChange","target","width","textAlign","marginTop","src","alt","onClick","cursor","onSubmit"],"sources":["/Users/taein/Desktop/한이음/SwitchNote_1101/Switchnote_Front/src/components/TextEditor.js"],"sourcesContent":["//모르겠음. 담당자가 변경하기 바랍니다.\nimport React, { useEffect, useRef, useState } from 'react';\nimport {useParams} from 'react-router-dom'\nimport refreshIcon from './images/refreshIcon.png';\nimport copyIcon from './images/copyIcon.png';\nimport loadingIcon from './images/loading.gif';\nimport MyButton from './MyButton.js';\nimport MyTextarea from './MyTextarea.js';\nimport { CallGPT } from '../api/gpt';\nimport TextInput from './TextInput.js';\nimport { CallKoBERT } from '../api/kobert';\n\nfunction TextEditor({ getProjectById }) {\n  const [projectTitle, setProjectTitle] = useState('');\n  const [projectContent, setProjectContent] = useState('');\n  const [project, setProject] = useState(null);\n  const { projectId } = useParams();\n  \n  // 사용자 입력값 저장 상태\n  const [userInput, setUserInput] = useState(\"\");\n\n  useEffect(() => {\n    if (projectId) {\n      const projectData = getProjectById(projectId);\n      if (projectData) {\n        setProjectContent(projectData.content); // 프로젝트 내용 저장\n        setUserInput(projectData.content); // 프로젝트 내용이 Input이니까 userInput에도 동일한 내용 저장\n        setProject(projectData); // 프로젝트 데이터 저장\n        setProjectTitle(projectData.title); // 프로젝트 제목 저장\n      }\n    }\n  }, [projectId]);\n\n  // 텍스트 새로고침\n  const handleClearText = () => {\n    setProjectContent('');\n    setUserInput('');\n  };\n\n  // 텍스트 복사\n  const handleCopyText = async () => {\n    await navigator.clipboard.writeText(userInput);\n    alert('텍스트가 클립보드에 복사되었습니다.');\n  };\n\n  // ppt 생성 기능\n  const handleSubmit = async () => {\n    await handleCreatePPT(userInput);\n  }\n\n  const [data, setData] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  // ppt 생성 함수\n  const handleCreatePPT = async(input) => {\n    try{\n      setIsLoading(true);\n      const message = await CallGPT({\n        prompt: `${input}`});\n      console.log(message);\n      console.log(transformGPTOutput(message));\n\n      //kobertResult 변수에 kobert 수행 결과가 들어 있음\n      const kobertResult = await CallKoBERT({text: `${input}`})\n      console.log(kobertResult);\n    } catch(error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  //gpt 결과를 {page:,type:,title:,subtitle:,content:} 형식으로 변환하는 함수\n  const transformGPTOutput = (gptOutput) => {\n    // '---' 기호를 기준으로 페이지 분리\n    const pages = gptOutput.split('---');\n  \n    const database = [];\n  \n    // 페이지 타입과 해당하는 알파벳 문자 매핑\n    const pageTypeMapping = {\n        '[표지]': 'a',\n        '[목차]': 'b',\n        '[본문]': 'c',\n        '[마무리]': 'd'\n    };\n  \n    for (const page of pages) {\n        const lines = page.split('\\n');\n  \n        let title = \"\", subtitle = \"\", contentList = [], pageNumber = 0, pageType = \"\";\n  \n        for (const line of lines) {\n            if (Object.keys(pageTypeMapping).some(pageTypeKey => line.includes(pageTypeKey))) {\n                const matchedPageTypeKey = Object.keys(pageTypeMapping).find(pageTypeKey => line.includes(pageTypeKey));\n  \n                if (matchedPageTypeKey) {\n                    pageType = pageTypeMapping[matchedPageTypeKey];\n                }\n            } else if (line.includes(\"페이지 번호:\")) {\n                pageNumber = parseInt(line.split(\"페이지 번호:\")[1].trim());\n            } else if (line.includes(\"제목:\")) {\n                title += line.split(\"제목:\")[1].trim();\n            } else if (line.includes(\"소제목:\")) {\n                subtitle += line.split(\"소제목:\")[1].trim();\n            } else if (line.includes(\"내용:\") || line.includes(\"마무리 문장:\")) {\n                contentList.push(line.trim());\n            } else {\n                if (line.trim().length > 0) {\n                    contentList.push(line.trim());\n                }\n            }\n        }\n  \n        const dataDict = {\n            page: pageNumber, \n            type: pageType,\n            title: title, \n            subtitle: subtitle, \n            content: contentList\n        };\n  \n        database.push(dataDict);\n    }\n  \n    return database;\n  };\n\n  // 입력한 텍스트를 txt 파일로 저장\n  const handleDownload = (title, content) => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([content], { type: \"text/plain\" });\n    element.href = URL.createObjectURL(file);\n    element.download = title ? `${title}.txt` : \"Untitled.txt\";\n    document.body.appendChild(element); \n    element.click();\n  };\n  \n  return (\n    <div>\n      <h3 style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>TEXT 변환, 그리고 PPT 생성</h3>\n\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n        <label htmlFor=\"fileName\"></label>\n          <MyTextarea\n            placeholder={project ? project.title : '파일명을 입력하세요'} \n            type={\"title\"}\n            value={projectTitle}\n            onChange={(e) => setProjectTitle(e.target.value)}\n          />\n\n        <label htmlFor=\"description\"></label>\n          <MyTextarea \n            placeholder={'부가설명을 입력하세요'}\n            type={\"small\"}\n            isLoading={isLoading}\n          />\n      </div>\n      \n      <div style={{ width: \"100%\", textAlign:\"right\", marginTop:'50px'}}>\n        <img\n          src={refreshIcon}\n          alt=\"새로고침\"\n          onClick={handleClearText}\n          style={{ cursor: 'pointer'}}\n        />\n      </div>\n\n      <div>\n        <TextInput \n          isLoading={isLoading} \n          onSubmit={setUserInput} \n          value={userInput}\n        />\n      </div>\n\n      <div style={{ width: \"100%\", textAlign:\"right\" }}>\n        <img\n          src={copyIcon}\n          alt=\"텍스트 복사\"\n          onClick={handleCopyText}\n          style={{ cursor: 'pointer'}}\n        />\n      </div>\n      \n        <MyButton text={'Workspace에 저장'}\n          // Workspace에 저장하는 기능 구현\n          type={\"blue\"}\n        />\n\n        <MyButton text={'.txt 파일로 다운로드'}\n          onClick={() => handleDownload(projectTitle, userInput)}\n          type={\"gray\"}\n        />\n        \n    </div>\n  );\n}\n\nexport default TextEditor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}