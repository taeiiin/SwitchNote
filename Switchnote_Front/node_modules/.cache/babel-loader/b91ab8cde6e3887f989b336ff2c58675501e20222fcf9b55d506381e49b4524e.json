{"ast":null,"code":"export const CallKoBERT = async input => {\n  try {\n    const response = await fetch('http://localhost:5000', {\n      // Flask 서버 주소\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(input)\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data.prediction; // 예측 결과 반환\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\n_c = CallKoBERT;\nvar _c;\n$RefreshReg$(_c, \"CallKoBERT\");","map":{"version":3,"names":["CallKoBERT","input","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","prediction","error","console","_c","$RefreshReg$"],"sources":["C:/Users/1222p/OneDrive/바탕 화면/2023 한이음 ICT/switchnote_all/Switchnote_Front/src/api/kobert.js"],"sourcesContent":["export const CallKoBERT = async (input) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000', { // Flask 서버 주소\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(input)\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n  \r\n      const data = await response.json();\r\n      \r\n      return data.prediction; // 예측 결과 반환\r\n  \r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAOC,KAAK,IAAK;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;MAAE;MACtDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI,CAACE,UAAU,CAAC,CAAC;EAE1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC;AACF,CAAC;AAACE,EAAA,GArBShB,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}