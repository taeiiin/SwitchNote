{"ast":null,"code":"export const generatePPT = async (data, category, title) => {\n  try {\n    const response = await fetch('http://localhost:8888/convert_ppt', {\n      // Flask 서버 주소\n      method: 'POST',\n      // HTTP 메서드를 POST로 지정\n      headers: {\n        'Content-Type': 'application/json' // 요청 본문의 타입을 JSON으로 지정\n      },\n\n      body: JSON.stringify({\n        data,\n        category,\n        title\n      }) // 요청 본문에 JSON 형식의 데이터를 추가\n    });\n\n    const urls = await response.json(); // 서버의 응답을 JSON으로 파싱\n    return urls;\n  } catch (error) {\n    console.error('Failed to convert PPT:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["generatePPT","data","category","title","response","fetch","method","headers","body","JSON","stringify","urls","json","error","console"],"sources":["/Users/taein/Desktop/한이음/AWS 최신본/Switchnote_Front/src/api/generatePPT.js"],"sourcesContent":["export const generatePPT = async (data,category,title) => {\n    try {\n      const response = await fetch('http://localhost:8888/convert_ppt', { // Flask 서버 주소\n        method: 'POST', // HTTP 메서드를 POST로 지정\n        headers: {\n            'Content-Type': 'application/json' // 요청 본문의 타입을 JSON으로 지정\n        },\n        body: JSON.stringify({ data, category, title }) // 요청 본문에 JSON 형식의 데이터를 추가\n    });\n    const urls = await response.json(); // 서버의 응답을 JSON으로 파싱\n    return urls;\n    } catch (error) {\n        console.error('Failed to convert PPT:', error);\n        throw error;\n    }\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAACC,QAAQ,EAACC,KAAK,KAAK;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAAE;MAClEC,MAAM,EAAE,MAAM;MAAE;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB,CAAC;MACvC,CAAC;;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,IAAI;QAAEC,QAAQ;QAAEC;MAAM,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC;;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,OAAOD,IAAI;EACX,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}