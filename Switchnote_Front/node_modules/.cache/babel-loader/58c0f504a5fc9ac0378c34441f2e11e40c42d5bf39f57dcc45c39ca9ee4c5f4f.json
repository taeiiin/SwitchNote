{"ast":null,"code":"var _jsxFileName = \"/Users/taein/Desktop/\\u1112\\u1161\\u11AB\\u110B\\u1175\\u110B\\u1173\\u11B7/SwitchNote_1101/Switchnote_Front/src/components/ToScript.js\";\nimport AWS from \"aws-sdk\";\nimport fs from \"fs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToScript() {\n  /*\n  //const spawn = require('child_process').spawn;\n  const { spawn } = require('child_process');\n  const result = spawn('python', ['PPTtoScript.py', './sample.pptx']);\n  */\n\n  const fs = require('fs');\n  const AWS = require('aws-sdk');\n  const S3_BUCKET = 'pptforscript';\n  const REGION = \"ap-southeast-2\";\n  const s3 = new AWS.S3({\n    secretAccessKey: 'jYNF3dkk06e44cL6iP7aNk9WBsjNOlkgxwNRKfQ1'\n  });\n\n  /*\n  const downloadFile = (fileName) => {\n      const params = {\n          Bucket: S3_BUCKET,\n          Key: 'sample.pptx'\n      };\n      s3.getObject(params, function(err, data) {\n          if(err) {\n              throw err;\n          }\n          fs.writeFileSync(fileName, data.Body.toString());\n      });\n  };\n  */\n\n  const getFile = async (bucketName, fileName) => {\n    const params = {\n      Bucket: S3_BUCKET,\n      Key: 'sample.pptx'\n    };\n    const file = await s3.getObject(params).promise();\n    return file.Body;\n  };\n\n  /*\n  result.stderr.on('data', function(data) {\n      console.log(data.toString());\n  });\n   result.stdout.on('data', (result)=> {\n      console.log(result.toString());\n  });\n  */\n\n  const python = require('python');\n  const convertToScript = async file => {\n    const pythonFile = new python.Python();\n    const script = pythonFile.run('PPTtoScript.py');\n    const result = await script.func('PtoS', file);\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_c = ToScript;\nexport default ToScript;\nvar _c;\n$RefreshReg$(_c, \"ToScript\");","map":{"version":3,"names":["AWS","fs","jsxDEV","_jsxDEV","ToScript","require","S3_BUCKET","REGION","s3","S3","secretAccessKey","getFile","bucketName","fileName","params","Bucket","Key","file","getObject","promise","Body","python","convertToScript","pythonFile","Python","script","run","result","func","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/taein/Desktop/한이음/SwitchNote_1101/Switchnote_Front/src/components/ToScript.js"],"sourcesContent":["import AWS from \"aws-sdk\";\nimport fs from \"fs\";\n\nfunction ToScript() {\n    /*\n    //const spawn = require('child_process').spawn;\n    const { spawn } = require('child_process');\n    const result = spawn('python', ['PPTtoScript.py', './sample.pptx']);\n    */\n\n    const fs = require('fs');\n    const AWS = require('aws-sdk');\n    const S3_BUCKET = 'pptforscript';\n    const REGION = \"ap-southeast-2\";\n    const s3 = new AWS.S3({\n        secretAccessKey: 'jYNF3dkk06e44cL6iP7aNk9WBsjNOlkgxwNRKfQ1'\n    });\n\n    /*\n    const downloadFile = (fileName) => {\n        const params = {\n            Bucket: S3_BUCKET,\n            Key: 'sample.pptx'\n        };\n        s3.getObject(params, function(err, data) {\n            if(err) {\n                throw err;\n            }\n            fs.writeFileSync(fileName, data.Body.toString());\n        });\n    };\n    */\n\n    const getFile = async (bucketName, fileName) => {\n        const params = {\n          Bucket: S3_BUCKET,\n          Key: 'sample.pptx'\n        };\n        const file = await s3.getObject(params).promise();\n        return file.Body;\n    };\n\n    /*\n    result.stderr.on('data', function(data) {\n        console.log(data.toString());\n    });\n\n    result.stdout.on('data', (result)=> {\n        console.log(result.toString());\n    });\n    */\n\n    const python = require('python');\n\n    const convertToScript = async (file) => {\n        const pythonFile = new python.Python();\n        const script = pythonFile.run('PPTtoScript.py');\n        const result = await script.func('PtoS', file);\n        return result;\n    };\n\n    return(\n        <div></div>\n    )\n}\n\nexport default ToScript;"],"mappings":";AAAA,OAAOA,GAAG,MAAM,SAAS;AACzB,OAAOC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,QAAQA,CAAA,EAAG;EAChB;AACJ;AACA;AACA;AACA;;EAEI,MAAMH,EAAE,GAAGI,OAAO,CAAC,IAAI,CAAC;EACxB,MAAML,GAAG,GAAGK,OAAO,CAAC,SAAS,CAAC;EAC9B,MAAMC,SAAS,GAAG,cAAc;EAChC,MAAMC,MAAM,GAAG,gBAAgB;EAC/B,MAAMC,EAAE,GAAG,IAAIR,GAAG,CAACS,EAAE,CAAC;IAClBC,eAAe,EAAE;EACrB,CAAC,CAAC;;EAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,MAAMC,OAAO,GAAG,MAAAA,CAAOC,UAAU,EAAEC,QAAQ,KAAK;IAC5C,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAET,SAAS;MACjBU,GAAG,EAAE;IACP,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMT,EAAE,CAACU,SAAS,CAACJ,MAAM,CAAC,CAACK,OAAO,CAAC,CAAC;IACjD,OAAOF,IAAI,CAACG,IAAI;EACpB,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,MAAMC,MAAM,GAAGhB,OAAO,CAAC,QAAQ,CAAC;EAEhC,MAAMiB,eAAe,GAAG,MAAOL,IAAI,IAAK;IACpC,MAAMM,UAAU,GAAG,IAAIF,MAAM,CAACG,MAAM,CAAC,CAAC;IACtC,MAAMC,MAAM,GAAGF,UAAU,CAACG,GAAG,CAAC,gBAAgB,CAAC;IAC/C,MAAMC,MAAM,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,MAAM,EAAEX,IAAI,CAAC;IAC9C,OAAOU,MAAM;EACjB,CAAC;EAED,oBACIxB,OAAA;IAAAU,QAAA,EAAAgB,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAEnB;AAACC,EAAA,GA7DQ5B,QAAQ;AA+DjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}